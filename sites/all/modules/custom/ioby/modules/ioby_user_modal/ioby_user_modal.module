<?php

/**
 * Implements hook_menu().
 */
function ioby_user_modal_menu() {
  $items = array();
  $items['ioby_user_modal/%ctools_js/load'] = array(
    'page callback' => 'ioby_user_modal_unified_login_page',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    );

  return $items;
}

/**
 * Menu callback for user/login creates a unified login/registration form.
 * Inspired by logintobbogan's logintoboggan_unified_login_page().
 * @see logintoboggan_unified_login_page()
 */
function ioby_user_modal_unified_login_page() {
  global $user;
  $ajax = FALSE;

  $url = explode('/', request_path());

  if ($url[1] == 'ajax') {
    $ajax = 'ajax';
  }
  // User is logged in already and ajax variable is set.
  if ($user->uid) {
    if ($ajax) {
      // redirect user
      ctools_include('ajax');
      ctools_add_js('ajax-responder');

      // default path
      $path = 'idea-start';

      // Path to redirect to
      if ($_GET['destination']) {
        $path = $_GET['destination'];
      }
      $commands[] = ctools_modal_command_dismiss();
      $commands[] = ctools_ajax_command_redirect($path);

      print ajax_render($commands);
      drupal_exit();
    }
    else {
      drupal_goto($_GET['destination']);
    }
  }

  // User is not logged in.
  if ($ajax) {
    ctools_include('modal');
    ctools_include('ajax');
    ctools_add_js('ajax-responder');

    $form_state_1 = $form_state_2 = array(
      'ajax' => $ajax,
      // 'build_info' => array('args' => array()),
      're_render' => TRUE,
      'no_redirect' => TRUE
      );

    $login_form = drupal_build_form('user_login', $form_state_1);

    // build the first form and then the second one
    if (empty($form_state_1['executed'])) {
      $register_form = drupal_build_form('user_register_form', $form_state_2);
    }

    // If there are messages for the form, render them.
    if ($messages = theme('status_messages')) {
      $messages = '' . $messages . '';
    }

    $variables = array(
      'messages' => $messages,
      'login_form' => drupal_render($login_form),
      'register_form' => drupal_render($register_form),
      );
    $commands = array();
    $output = theme('ioby_user_modal_unified_login', $variables);

    $commands[] = ajax_command_prepend('#modal-content', render($output));
    $commands[] = ajax_command_invoke('#modal-content :input:visible:first', 'focus');
    print ajax_render($commands); // this function exits.
    exit;
  }
  else {
    $login_form = drupal_get_form('user_login');
    $register_form = drupal_get_form('user_register_form');
    $rendered_login_form = drupal_render($login_form);
    $rendered_register_form = drupal_render($register_form);
    $variables = array(
      'login_form' => $rendered_login_form,
      'register_form' => $rendered_register_form,
      );
    return theme('ioby_user_modal_unified_login', $variables);
  }
}

/**
 * Implemenation of hook_theme().
 */
function ioby_user_modal_theme($existing, $type, $theme, $path) {
  return array(
    'ioby_user_modal_unified_login' => array(
      'template' => 'ioby-user-modal-unified-login',
      'path' => $path . '/templates',
      // 'type' => 'theme',
      'variables' => array(
        'messages' => NULL,
        'login_form' => NULL,
        'register_form' => NULL,
        ),
      ),
    );
}

/**
 * Implements hook_init().
 */
function ioby_user_modal_init() {
  global $user;

  // Make sure Ctools work on node pages
  ctools_include('modal');
  ctools_include('ajax');

  // Add Ctools JavaScript to the page
  ctools_modal_add_js();

  // Add header text variable to be printed on ioby_user_modal.js
  $header_text = t('<strong>Share Your Idea</strong>: First, let us know who you are by creating an account or logging in to your ioby account.');

  // Create our own javascript that will be used to theme a modal.
  $popup_style = array(
    'ioby-user-modal' => array(
      'modalSize' => array(
        'type' => 'fixed',
        'width' => 500,
        'height' => 994,
        'addWidth' => 30,
        'addHeight' => 30,
        'contentRight' => 0,
        'contentBottom' => 0,
        ),
      'modalOptions' => array(
        'opacity' => .6,
        'background-color' => '#000',
        ),
      'throbber'=> '',
      'animation' => 'fadeIn',
      'modalTheme' => 'ioby_user_modal',
      'headerText' => $header_text,
      ),
    );
  // Add the settings array defined above to Drupal 7's JS settings:
  drupal_add_js($popup_style, 'setting');

  // The function below assumes the .js file resides in [module_dir]/js
  ctools_add_js('ioby_user_modal', 'ioby_user_modal', 'js');

  // The function below assumes the .css file resides in [module_dir]/css
  // ctools_add_css('ioby-user-modal', 'ioby-user-modal', drupal_get_path('module', 'ioby_user_modal').'/css');

  // Helper for Drupal settings to know if user is logged in
  drupal_add_js(array('ioby_user_modal' => $user->uid), 'setting');
  drupal_add_css(drupal_get_path('module', 'ioby_user_modal') . '/css/ioby_user_modal.css');

}


/**
 * Implements hook_form_alter().
 */
function ioby_user_modal_form_alter(&$form, &$form_state, $form_id) {

  // Don't continue on form alter for user "like" pages, login or registration pages
  if (current_path() == 'user' || current_path() == 'user/register')
    return true;

  // Set destination
  if (!empty($_GET['destination'])){
    $form_state['storage']['destination'] = $_GET['destination'];
  }

  // User login
  if($form_id == 'user_login'){

    $form['#prefix'] = '<div id="formwrapper">';
    $form['#suffix'] = '</div>';

    $form['forgot_pass_link'] = array(
      '#markup' => l('Forgot Password?', '/user/password')
    );

    $form['actions']['submit']['#ajax'] = array(
      'callback' => '_form_ajax_submit',
      'wrapper' => 'formwrapper',
      'method' => 'replace',
      'effect' => 'fade',
    );
  }

  // User Registration
  if($form_id == 'user_register_form'){
    $form['#prefix'] = '<div id="formwrapper-reg">';
    $form['#suffix'] = '</div>';

    $form['actions']['submit']['#ajax'] = array(
      'callback' => '_form_ajax_submit',
      'wrapper' => 'formwrapper-reg',
      'method' => 'replace',
      'effect' => 'fade',
    );
  }
}

/**
 * Custom ajax form submit for user login and reg. pages
 */

function _form_ajax_submit($form, &$form_state) {

  // Get form id
  $formid = $form['#form_id'];

  // validate the form
  drupal_validate_form($formid, $form, $form_state);

  // if there are errors, return the form to display the error messages
  if (form_get_errors()) {
    $form_state['rebuild'] = TRUE;
    return $form;
  }

  // process the login form
  if ($formid == 'user_login') {
    user_login_submit($form, $form_state);
  }
  // process the register form
  if ($formid == 'user_register_form'){
    // prevent duplicate messaging
    unset($_SESSION['messages']);
    // submit register form
    $form_state['values']['name'] = $form_state['values']['mail'];
    user_register_submit($form, $form_state);
  }

 // redirect user
  ctools_include('ajax');
  ctools_add_js('ajax-responder');

  // default destination path
  $path = 'idea';

   // Path to redirect to
  if ($form_state['storage']['destination']) {
    $path = $form_state['storage']['destination'];
  }

  $commands[] = ctools_ajax_command_redirect($path);
  return array('#type' => 'ajax',  '#commands' => $commands);
}
