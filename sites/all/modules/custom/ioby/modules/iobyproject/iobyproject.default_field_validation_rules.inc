<?php

/**
 * @file
 * Bulk export of default_field_validation_rules objects generated by Bulk export module.
 */

/**
 * Implements hook_default_field_validation_rule().
 */
function iobyproject_default_field_validation_rule() {
  $rules = array();

  $rule = new stdClass();
  $rule->disabled = FALSE; /* Edit this to true to make a default rule disabled initially */
  $rule->api_version = 2;
  $rule->rulename = 'Tagline Character Count';
  $rule->name = 'charactercount_project_inbrief';
  $rule->field_name = 'field_project_inbrief';
  $rule->col = 'value';
  $rule->entity_type = 'node';
  $rule->bundle = 'project_2';
  $rule->validator = 'field_validation_length_validator';
  $rule->settings = array(
    'min' => '',
    'max' => '230',
    'bypass' => 0,
    'roles' => array(
      1 => 0,
      2 => 0,
      3 => 0,
      4 => 0,
      6 => 0,
    ),
    'errors' => 0,
    'condition' => 0,
    'condition_wrapper' => array(
      'condition_field' => '',
      'condition_operator' => 'equals',
      'condition_value' => '',
    ),
  );
  $rule->error_message = '[field-name] can only contain a maximum of [max] characters.';
  $rules['charactercount_project_inbrief'] = $rule;

  $rule = new stdClass();
  $rule->disabled = FALSE; /* Edit this to true to make a default rule disabled initially */
  $rule->api_version = 2;
  $rule->rulename = 'Valid Contact Phone';
  $rule->name = 'valid_contact_phone';
  $rule->field_name = 'field_project_contact_phone';
  $rule->col = 'value';
  $rule->entity_type = 'node';
  $rule->bundle = 'project_2';
  $rule->validator = 'field_validation_phone_validator';
  $rule->settings = array(
    'country' => 'ca',
    'bypass' => 0,
    'roles' => array(
      1 => 0,
      2 => 0,
      3 => 0,
      4 => 0,
      6 => 0,
    ),
    'errors' => 0,
    'condition' => 0,
    'condition_wrapper' => array(
      'condition_field' => '',
      'condition_operator' => 'equals',
      'condition_value' => '',
    ),
  );
  $rule->error_message = '[field-name] is not in a valid format.';
  $rules['valid_contact_phone'] = $rule;

  $rule = new stdClass();
  $rule->disabled = FALSE; /* Edit this to true to make a default rule disabled initially */
  $rule->api_version = 2;
  $rule->rulename = 'Valid Preferred Email';
  $rule->name = 'valid_preferred_email';
  $rule->field_name = 'field_project_contact_email';
  $rule->col = 'email';
  $rule->entity_type = 'node';
  $rule->bundle = 'project_2';
  $rule->validator = 'field_validation_email_validator';
  $rule->settings = array(
    'bypass' => 0,
    'roles' => array(
      1 => 0,
      2 => 0,
      3 => 0,
      4 => 0,
      6 => 0,
    ),
    'errors' => 0,
    'condition' => 0,
    'condition_wrapper' => array(
      'condition_field' => '',
      'condition_operator' => 'equals',
      'condition_value' => '',
    ),
  );
  $rule->error_message = '[field-name] is not valid.';
  $rules['valid_preferred_email'] = $rule;

  $rule = new stdClass();
  $rule->disabled = FALSE; /* Edit this to true to make a default rule disabled initially */
  $rule->api_version = 2;
  $rule->rulename = 'Valid Sponsor\'s Email';
  $rule->name = 'valid_sponsors_email';
  $rule->field_name = 'field_sponsor_email';
  $rule->col = 'email';
  $rule->entity_type = 'node';
  $rule->bundle = 'project_2';
  $rule->validator = 'field_validation_email_validator';
  $rule->settings = array(
    'bypass' => 0,
    'roles' => array(
      1 => 0,
      2 => 0,
      3 => 0,
      4 => 0,
      6 => 0,
    ),
    'errors' => 0,
    'condition' => 0,
    'condition_wrapper' => array(
      'condition_field' => '',
      'condition_operator' => 'equals',
      'condition_value' => '',
    ),
  );
  $rule->error_message = '[field-name] is not valid.';
  $rules['valid_sponsors_email'] = $rule;

  $rule = new stdClass();
  $rule->disabled = FALSE; /* Edit this to true to make a default rule disabled initially */
  $rule->api_version = 2;
  $rule->rulename = 'Describe Your Project Word Count';
  $rule->name = 'wordcount_project_body';
  $rule->field_name = 'body';
  $rule->col = 'value';
  $rule->entity_type = 'node';
  $rule->bundle = 'project_2';
  $rule->validator = 'field_validation_words_validator';
  $rule->settings = array(
    'min' => '',
    'max' => '230',
    'bypass' => 0,
    'roles' => array(
      1 => 0,
      2 => 0,
      3 => 0,
      4 => 0,
      6 => 0,
    ),
    'errors' => 0,
    'condition' => 0,
    'condition_wrapper' => array(
      'condition_field' => '',
      'condition_operator' => 'equals',
      'condition_value' => '',
    ),
  );
  $rule->error_message = '[field-name] can only contain a maximum of [max] words.';
  $rules['wordcount_project_body'] = $rule;

  $rule = new stdClass();
  $rule->disabled = FALSE; /* Edit this to true to make a default rule disabled initially */
  $rule->api_version = 2;
  $rule->rulename = 'The Steps Word Count';
  $rule->name = 'wordcount_project_desc';
  $rule->field_name = 'field_project_desc';
  $rule->col = 'value';
  $rule->entity_type = 'node';
  $rule->bundle = 'project_2';
  $rule->validator = 'field_validation_words_validator';
  $rule->settings = array(
    'min' => '',
    'max' => '150',
    'bypass' => 0,
    'roles' => array(
      1 => 0,
      2 => 0,
      3 => 0,
      4 => 0,
      6 => 0,
    ),
    'errors' => 0,
    'condition' => 0,
    'condition_wrapper' => array(
      'condition_field' => '',
      'condition_operator' => 'equals',
      'condition_value' => '',
    ),
  );
  $rule->error_message = '[field-name] can only contain a maximum of [max] words.';
  $rules['wordcount_project_desc'] = $rule;

  $rule = new stdClass();
  $rule->disabled = FALSE; /* Edit this to true to make a default rule disabled initially */
  $rule->api_version = 2;
  $rule->rulename = 'Why We\'re Doing This Word Count';
  $rule->name = 'wordcount_project_issue';
  $rule->field_name = 'field_project_issue';
  $rule->col = 'value';
  $rule->entity_type = 'node';
  $rule->bundle = 'project_2';
  $rule->validator = 'field_validation_words_validator';
  $rule->settings = array(
    'min' => '',
    'max' => '250',
    'bypass' => 0,
    'roles' => array(
      1 => 0,
      2 => 0,
      3 => 0,
      4 => 0,
      6 => 0,
    ),
    'errors' => 0,
    'condition' => 0,
    'condition_wrapper' => array(
      'condition_field' => '',
      'condition_operator' => 'equals',
      'condition_value' => '',
    ),
  );
  $rule->error_message = '[field-name] can only contain a maximum of [max] words.';
  $rules['wordcount_project_issue'] = $rule;

  $rule = new stdClass();
  $rule->disabled = FALSE; /* Edit this to true to make a default rule disabled initially */
  $rule->api_version = 2;
  $rule->rulename = 'Project Leader Bio Word Count';
  $rule->name = 'wordcount_project_leader_bio';
  $rule->field_name = 'field_project_leader_bio';
  $rule->col = 'value';
  $rule->entity_type = 'node';
  $rule->bundle = 'project_2';
  $rule->validator = 'field_validation_words_validator';
  $rule->settings = array(
    'min' => '230',
    'max' => '',
    'bypass' => 0,
    'roles' => array(
      1 => 0,
      2 => 0,
      3 => 0,
      4 => 0,
      6 => 0,
    ),
    'errors' => 0,
    'condition' => 0,
    'condition_wrapper' => array(
      'condition_field' => '',
      'condition_operator' => 'equals',
      'condition_value' => '',
    ),
  );
  $rule->error_message = '[field-name] can only contain a maximum of [max] words.';
  $rules['wordcount_project_leader_bio'] = $rule;

  return $rules;
}
