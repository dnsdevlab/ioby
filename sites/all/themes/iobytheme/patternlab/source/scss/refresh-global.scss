@charset "utf-8";
@import url('https://fonts.googleapis.com/css?family=Barlow:400,600,700|Lato:400,400i,700,700i&subset=latin-ext'); //@TODO: use the files

// Colors.
$theOrange: #E88124;
$theBlue: #3599CC;
$theBlack: #000;
$theGranite: #EBE5DB;
$theGreen: #78AD3B;
$theEggshell: #F5F2ED;
$theWhite: #fff;
$thePurple: #8241D7;
$theGrey: #6A6B6E;

// Type Scale.
$tsA: 14px;
$tsB: 16px;
$tsC: 18px;
$tsD: 20px;
$tsE: 24px;
$tsF: 30px;
$tsG: 36px;
$tsH: 42px;
$tsI: 50px;
$tsJ: 60px;

@mixin fade() {
  opacity: 1;
  transition: opacity .25s;

  &:hover {
    opacity: .75;
    transition: opacity .25s;
  }
}

@mixin textFade($color) {
  transition: color .25s;
  &:hover{
    color: lighten($color,25%);
    transition: color .25s;
  }
}

@mixin bgFade($color) {
  transition: background-color .25s;
  &:hover{
    background-color: lighten($color,25%);
    transition: background-color .25s;
  }
}

// Atomic Utility Classes.
.refresh-home .button {
  display: inline-block;
  color: $theWhite;
  text-align: center;
  @extend .fa;
  @extend .barlow;
  @extend .uc;
  letter-spacing: 0.125em;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  border: none;
  background: $theGranite;
  background-color: $theGranite;
  padding: 16px 30px;
  margin-left: 0;
  margin-right: 0;
  @include fade;
}

.refresh-home main > section:not(.connect) input[type='submit']{
  @include fade;
}

// Atomic Color Classes.
.refresh-home .orange { background-color: $theOrange; }
.refresh-home .blue { background-color: $theBlue; }
.refresh-home .black { background-color: $theBlack; }
.refresh-home .granite { background-color: $theGranite; }
.refresh-home .green { background-color: $theGreen; }
.refresh-home .eggshell { background-color: $theEggshell; }
.refresh-home .white { background-color: $theWhite; }
.refresh-home .purple { background-color: $thePurple; }
.refresh-home .transparent { background-color: transparent; }

.refresh-home .c-orange { color: $theOrange; }
.refresh-home .c-blue { color: $theBlue; }
.refresh-home .c-black { color: $theBlack; }
.refresh-home .c-granite { color: $theGranite; }
.refresh-home .c-green { color: $theGreen; }
.refresh-home .c-eggshell { color: $theEggshell; }
.refresh-home .c-white { color: $theWhite; }
.refresh-home .c-purple { color: $thePurple; }
.refresh-home .c-transparent { color: transparent; }

.link-color-orange a,.link-color-orange span{
  color: $theOrange;
  transition: color .5s;
  &:hover{
    color: lighten($theOrange,25%);
    transition: color .5s;
  }
}
.link-color-blue a, .link-color-blue span{
  color: $theBlue;
  transition: color .5s;
  &:hover{
    transition: color .5s;
    color: lighten($theBlue,25%);
  }
}
.link-color-purple a, .link-color-purple span{
  color: $thePurple;
  transition: color .5s;
  &:hover{
    transition: color .5s;
    color: lighten($thePurple,25%);
  }
}

// Atomic Type Scale Classes.
.fa { font-size: $tsA; }
.fb { font-size: $tsB; }
.fc { font-size: $tsC; }
.fd { font-size: $tsD; }
.fe { font-size: $tsE; }
.ff { font-size: $tsF; }
.fg { font-size: $tsG; }
.fh { font-size: $tsH; }
.fi { font-size: $tsI; }
.fj { font-size: $tsJ; }

// Atomic Font Classes.
.lato{ font-family: "Lato"; font-weight: 400; line-height: 1.25; }  
.barlow{ font-family: "Barlow"; font-weight: bold; line-height: 1.25em; }  

.uc {
  text-transform: uppercase;
}

.hidden {
  display: none;
}

.inner-wrap{
  width: 1042px;
  margin: 0 auto;
}

.visually-hidden, .screen-reader-text { 
  position: absolute; 
  overflow: hidden; 
  clip: rect(0 0 0 0); 
  height: 1px; width: 1px; 
  margin: -1px; padding: 0; border: 0; 
}

// Clearfix mixin. Ex: @include clearfix;
@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: ' ';
  }
}


// Media Query mixin. Ex: @include mq($from: $bp-2) {} // see _mq.scss in source/scss
/// @example scss
///  .element {
///    @include mq($from: $bp4) {
///      color: red;
///    }
///    @include mq($until: $bp-2) {
///      color: blue;
///    }
///    @include mq(mobile, $bp-2) {
///      color: green;
///    }
///    @include mq($from: $bp-2, $and: '(orientation: landscape)') {
///      color: teal;
///    }
///    @include mq(950px) {
///      color: hotpink;
///    }
///    @include mq(tablet, $media-type: screen) {
///      color: hotpink;
///    }
///    // Advanced use:
///    $my-breakpoints: (L: 900px, XL: 1200px);
///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {
///      color: hotpink;
///    }
///  }

// Breakpoints. @TODO: reduce and rename these.
$bp-1: 1375px; 
$bp-2: 1110px;
$bp-3: 900px;  
$bp-4: 800px;  
$bp-5: 700px;
$bp-6: 600px;
$bp-7: 500px;
$bp-8: 400px;
$maxwidth: 1590px;

@mixin tiny() {
  @media only screen and (max-width: 550px) {
      @content;
  }
}

@mixin small() {
  @media only screen and (max-width: 1000px) {
      @content;
  }
}

@mixin medium() {
  @media only screen and (max-width: 1400px) {
      @content;
  }
}

@mixin onlyBig(){
  @media only screen and (min-width: 1401px) {
    @content;
  }
}

