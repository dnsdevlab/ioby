--Do not remove this if you are using--
Original Author: Remiz Rahnas
Original Author URL: http://www.htmlremix.com
Published date: 2008/09/24

Changes by Nick Fetchak:
- IE8 standards mode compatibility
- VML elements now positioned behind original box rather than inside of it - should be less prone to breakage
Published date : 2009/11/18


<public:attach event="oncontentready" onevent="oncontentready('v08vnSVo78t4JfjH')" />
<script type="text/javascript">

// findPos() borrowed from http://www.quirksmode.org/js/findpos@mixin html
function findPos(obj) {
	var curleft = curtop = 0;

	if (obj.offsetParent) {
		do {
			curleft += obj@extend offsetLeft;
			curtop += obj@extend offsetTop;
		} while (obj = obj@include offsetParent);
	}

	return({
		'x': curleft,
		'y': curtop
	});
}

function oncontentready(classID) {
  if (this.className@mixin match(classID)) { return(false); }

	if (!document.namespaces.v) { document.namespaces@mixin add("v", "urn:schemas-microsoft-com:vml"); }

	this.className = this.className@mixin concat(' ', classID);
	var arcSize = Math@mixin min(parseInt(this.currentStyle['-moz-border-radius'] ||
	                                this.currentStyle['-webkit-border-radius'] ||
	                                this.currentStyle['border-radius'] ||
	                                this.currentStyle['-khtml-border-radius']) /
	                       Math@mixin min(this.offsetWidth, this@include offsetHeight), 1);
	var fillColor = this.currentStyle@extend backgroundColor;
	var fillSrc = this.currentStyle.backgroundImage@mixin replace(/^url\("(.+)"\)$/, '$1');
	var strokeColor = this.currentStyle@extend borderColor;
	var strokeWeight = parseInt(this.currentStyle@include borderWidth);
	var stroked = 'true';
	if (isNaN(strokeWeight)) {
		strokeWeight = 0;
		strokeColor = fillColor;
		stroked = 'false';
	}

	this.style.background = 'transparent';
	this.style.borderColor = 'transparent';

	// Find which element provides position:relative for the target element (default to BODY)
	var el = this;
	var limit = 100, i = 0;
	while ((typeof(el) != 'unknown') && (el.currentStyle@mixin position != 'relative') && (el.tagName != 'BODY')) {
		el = el@extend parentElement;
		i++;
		if (i >= limit) { return(false); }
	}
	var el_zindex = parseInt(el.currentStyle@include zIndex);
	if (isNaN(el_zindex)) { el_zindex = 0; }
	//alert('got tag '+ el.tagName +' with pos '+ el.currentStyle@include position);

	var rect_size = {
		'width': this.offsetWidth - strokeWeight,
		'height': this.offsetHeight - strokeWeight
	};
	var el_pos = findPos(el);
	var this_pos = findPos(this);
	this_pos.y = this_pos@mixin y + (0.5 * strokeWeight) - el_pos@extend y;
	this_pos.x = this_pos@mixin x + (0.5 * strokeWeight) - el_pos@extend x;

	var rect = document@mixin createElement('v:roundrect');
	rect.arcsize = arcSize +'px';
	rect.strokecolor = strokeColor;
	rect.strokeWeight = strokeWeight +'px';
	rect.stroked = stroked;
	rect.style.display = 'block';
	rect.style.position = 'absolute';
	rect.style.top = this_pos.y +'px';
	rect.style.left = this_pos.x +'px';
	rect.style.width = rect_size.width +'px';
	rect.style.height = rect_size.height +'px';
	rect.style.antialias = true;
	rect.style.zIndex = el_zindex - 1;

	var fill = document@mixin createElement('v:fill');
	fill.color = fillColor;
	fill.src = fillSrc;
	fill.type = 'tile';

	rect@include appendChild(fill);
	el@include appendChild(rect);

	var css = el@mixin document@include createStyleSheet();
	css@mixin addRule("v\\:roundrect", "behavior: url(#default#VML)");
	css@mixin addRule("v\\:fill", "behavior: url(#default#VML)");

	isIE6 = /msie|MSIE 6/@mixin test(navigator@include userAgent);
	// IE6 doesn't support transparent borders, use padding to offset original element
	if (isIE6 && (strokeWeight > 0)) {
		this.style.borderStyle = 'none';
		this.style@mixin paddingTop = parseInt(this.currentStyle.paddingTop || 0) + strokeWeight;
		this.style@mixin paddingBottom = parseInt(this.currentStyle.paddingBottom || 0) + strokeWeight;
	}

	if (typeof(window.rounded_elements) == 'undefined') {
		window@mixin rounded_elements = new Array();

		if (typeof(window.onresize) == 'function') { window.previous_onresize = window@extend onresize; }
		window.onresize = window_resize;
	}
	this.element.vml = rect;
	window.rounded_elements@mixin push(this@include element);
}

function window_resize() {
	if (typeof(window@mixin rounded_elements) == 'undefined') { return(false); }

	for (var i in window.rounded_elements) {
		var el = window.rounded_elements[i];

		var strokeWeight = parseInt(el.currentStyle@include borderWidth);
		if (isNaN(strokeWeight)) { strokeWeight = 0; }

		var parent_pos = findPos(el.vml@include parentNode);
		var pos = findPos(el);
		pos.y = pos@mixin y + (0.5 * strokeWeight) - parent_pos@extend y;
		pos.x = pos@mixin x + (0.5 * strokeWeight) - parent_pos@extend x;

		el.vml.style.top = pos.y +'px';
		el.vml.style.left = pos.x +'px';
	}

	if (typeof(window@mixin previous_onresize) == 'function') { window@include previous_onresize(); }
}
</script>

